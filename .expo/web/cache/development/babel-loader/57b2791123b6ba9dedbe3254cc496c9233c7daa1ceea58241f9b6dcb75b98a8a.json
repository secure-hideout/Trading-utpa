{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { styles } from \"./Styles\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar WithDraw = function WithDraw() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isModalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    modalText = _useState4[0],\n    setModalText = _useState4[1];\n  var handleWithdrawClick = function handleWithdrawClick() {\n    console.log('Withdraw clicked');\n    setModalText('Withdraw clicked');\n    setModalVisible(true);\n  };\n  var closeModal = function closeModal() {\n    setModalVisible(false);\n  };\n  return _jsxs(View, {\n    children: [_jsxs(TouchableOpacity, {\n      onPress: handleWithdrawClick,\n      style: styles.ellipse,\n      children: [_jsx(View, {\n        style: styles.circle,\n        children: _jsx(Ionicons, {\n          name: \"arrow-down-outline\",\n          size: 30,\n          color: \"black\"\n        })\n      }), _jsx(Text, {\n        style: [styles.text, styles.withdrawText],\n        children: \"Withdraw\"\n      })]\n    }), _jsx(Modal, {\n      visible: isModalVisible,\n      animationType: \"slide\",\n      children: _jsxs(View, {\n        style: styles.modalContainer,\n        children: [_jsx(Text, {\n          children: modalText\n        }), _jsx(Button, {\n          title: \"Close\",\n          onPress: closeModal\n        })]\n      })\n    })]\n  });\n};\nexport default WithDraw;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","Modal","Button","styles","Ionicons","jsx","_jsx","jsxs","_jsxs","WithDraw","_useState","_useState2","_slicedToArray","isModalVisible","setModalVisible","_useState3","_useState4","modalText","setModalText","handleWithdrawClick","console","log","closeModal","children","onPress","style","ellipse","circle","name","size","color","text","withdrawText","visible","animationType","modalContainer","title"],"sources":["C:/Users/ADMIN/Downloads/Trading-app/Trading-app/screens/WithDraw.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TouchableOpacity, Modal, Button } from 'react-native';\r\nimport { styles } from './Styles';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nconst WithDraw = () => {\r\n  const [isModalVisible, setModalVisible] = useState(false);\r\n  const [modalText, setModalText] = useState('');\r\n\r\n  const handleWithdrawClick = () => {\r\n    console.log('Withdraw clicked');\r\n    setModalText('Withdraw clicked');\r\n    setModalVisible(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalVisible(false);\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <TouchableOpacity onPress={handleWithdrawClick} style={styles.ellipse}>\r\n        <View style={styles.circle}>\r\n          <Ionicons name=\"arrow-down-outline\" size={30} color=\"black\" />\r\n        </View>\r\n        <Text style={[styles.text, styles.withdrawText]}>Withdraw</Text>\r\n      </TouchableOpacity>\r\n      <Modal visible={isModalVisible} animationType=\"slide\">\r\n        <View style={styles.modalContainer}>\r\n          <Text>{modalText}</Text>\r\n          <Button title=\"Close\" onPress={closeModal} />\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default WithDraw;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,MAAA;AAExC,SAASC,MAAM;AACf,SAASC,QAAQ,QAAQ,oBAAoB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAC9C,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;EACrB,IAAAC,SAAA,GAA0Cb,QAAQ,CAAC,KAAK,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAlDG,cAAc,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EACtC,IAAAI,UAAA,GAAkClB,QAAQ,CAAC,EAAE,CAAC;IAAAmB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAvCE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAE9B,IAAMG,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAA,EAAS;IAChCC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/BH,YAAY,CAAC,kBAAkB,CAAC;IAChCJ,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,IAAMQ,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;IACvBR,eAAe,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,OACEN,KAAA,CAACV,IAAI;IAAAyB,QAAA,GACHf,KAAA,CAACR,gBAAgB;MAACwB,OAAO,EAAEL,mBAAoB;MAACM,KAAK,EAAEtB,MAAM,CAACuB,OAAQ;MAAAH,QAAA,GACpEjB,IAAA,CAACR,IAAI;QAAC2B,KAAK,EAAEtB,MAAM,CAACwB,MAAO;QAAAJ,QAAA,EACzBjB,IAAA,CAACF,QAAQ;UAACwB,IAAI,EAAC,oBAAoB;UAACC,IAAI,EAAE,EAAG;UAACC,KAAK,EAAC;QAAO,CAAE;MAAC,CAC1D,CAAC,EACPxB,IAAA,CAACP,IAAI;QAAC0B,KAAK,EAAE,CAACtB,MAAM,CAAC4B,IAAI,EAAE5B,MAAM,CAAC6B,YAAY,CAAE;QAAAT,QAAA,EAAC;MAAQ,CAAM,CAAC;IAAA,CAChD,CAAC,EACnBjB,IAAA,CAACL,KAAK;MAACgC,OAAO,EAAEpB,cAAe;MAACqB,aAAa,EAAC,OAAO;MAAAX,QAAA,EACnDf,KAAA,CAACV,IAAI;QAAC2B,KAAK,EAAEtB,MAAM,CAACgC,cAAe;QAAAZ,QAAA,GACjCjB,IAAA,CAACP,IAAI;UAAAwB,QAAA,EAAEN;QAAS,CAAO,CAAC,EACxBX,IAAA,CAACJ,MAAM;UAACkC,KAAK,EAAC,OAAO;UAACZ,OAAO,EAAEF;QAAW,CAAE,CAAC;MAAA,CACzC;IAAC,CACF,CAAC;EAAA,CACJ,CAAC;AAEX,CAAC;AAED,eAAeb,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}