{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MyWatchList = function MyWatchList() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isMtdModalVisible = _useState2[0],\n    setIsMtdModalVisible = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isYtdModalVisible = _useState4[0],\n    setIsYtdModalVisible = _useState4[1];\n  var toggleMtdModal = function toggleMtdModal() {\n    setIsMtdModalVisible(!isMtdModalVisible);\n  };\n  var toggleYtdModal = function toggleYtdModal() {\n    setIsYtdModalVisible(!isYtdModalVisible);\n  };\n  return _jsxs(View, {\n    style: styles.container4,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"My Watchlist\"\n    }), _jsxs(View, {\n      style: styles.buttonsContainer,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: toggleMtdModal,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"MTD\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: toggleYtdModal,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"YTD\"\n        })\n      })]\n    }), _jsx(Modal, {\n      visible: isMtdModalVisible,\n      animationType: \"slide\",\n      children: _jsxs(View, {\n        style: styles.modalContainer,\n        children: [_jsx(Text, {\n          style: styles.modalTitle,\n          children: \"MTD Modal\"\n        }), _jsx(TouchableOpacity, {\n          style: styles.modalCloseButton,\n          onPress: toggleMtdModal,\n          children: _jsx(Text, {\n            style: styles.modalCloseButtonText,\n            children: \"Close\"\n          })\n        })]\n      })\n    }), _jsx(Modal, {\n      visible: isYtdModalVisible,\n      animationType: \"slide\",\n      children: _jsxs(View, {\n        style: styles.modalContainer,\n        children: [_jsx(Text, {\n          style: styles.modalTitle,\n          children: \"YTD Modal\"\n        }), _jsx(TouchableOpacity, {\n          style: styles.modalCloseButton,\n          onPress: toggleYtdModal,\n          children: _jsx(Text, {\n            style: styles.modalCloseButtonText,\n            children: \"Close\"\n          })\n        })]\n      })\n    })]\n  });\n};\nvar styles = {\n  container4: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: '#F5F5F5'\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  buttonsContainer: {\n    flexDirection: 'row'\n  },\n  button: {\n    marginLeft: 8,\n    paddingVertical: 4,\n    paddingHorizontal: 8,\n    backgroundColor: '#ECECEC',\n    borderRadius: 4\n  },\n  buttonText: {\n    fontSize: 14,\n    color: 'black'\n  },\n  modalCloseButton: {\n    marginTop: 16,\n    padding: 8,\n    backgroundColor: '#ECECEC',\n    borderRadius: 4\n  },\n  modalCloseButtonText: {\n    fontSize: 14,\n    color: 'black'\n  }\n};\nexport default MyWatchList;","map":{"version":3,"names":["React","useState","View","Text","Image","TouchableOpacity","TextInput","Modal","Button","jsx","_jsx","jsxs","_jsxs","MyWatchList","_useState","_useState2","_slicedToArray","isMtdModalVisible","setIsMtdModalVisible","_useState3","_useState4","isYtdModalVisible","setIsYtdModalVisible","toggleMtdModal","toggleYtdModal","style","styles","container4","children","title","buttonsContainer","button","onPress","buttonText","visible","animationType","modalContainer","modalTitle","modalCloseButton","modalCloseButtonText","flexDirection","justifyContent","alignItems","padding","backgroundColor","fontSize","fontWeight","marginLeft","paddingVertical","paddingHorizontal","borderRadius","color","marginTop"],"sources":["C:/Users/ADMIN/Downloads/Trading-app/Trading-app/screens/MyWatchList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, Image, TouchableOpacity, TextInput, Modal, Button } from 'react-native';\r\n\r\nconst MyWatchList = () => {\r\n\r\n  const [isMtdModalVisible, setIsMtdModalVisible] = useState(false);\r\n  const [isYtdModalVisible, setIsYtdModalVisible] = useState(false);\r\n\r\n  const toggleMtdModal = () => {\r\n    setIsMtdModalVisible(!isMtdModalVisible);\r\n  };\r\n\r\n  const toggleYtdModal = () => {\r\n    setIsYtdModalVisible(!isYtdModalVisible);\r\n  };\r\n  \r\n    return(\r\n    <View style={styles.container4}>\r\n      <Text style={styles.title}>My Watchlist</Text>\r\n      <View style={styles.buttonsContainer}>\r\n        <TouchableOpacity style={styles.button} onPress={toggleMtdModal}>\r\n          <Text style={styles.buttonText}>MTD</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.button} onPress={toggleYtdModal}>\r\n          <Text style={styles.buttonText}>YTD</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      \r\n\r\n      <Modal visible={isMtdModalVisible} animationType=\"slide\">\r\n        <View style={styles.modalContainer}>\r\n          <Text style={styles.modalTitle}>MTD Modal</Text>\r\n          {/* Add your MTD modal content here */}\r\n          <TouchableOpacity style={styles.modalCloseButton} onPress={toggleMtdModal}>\r\n            <Text style={styles.modalCloseButtonText}>Close</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </Modal>\r\n\r\n      {/* YTD Modal */}\r\n      <Modal visible={isYtdModalVisible} animationType=\"slide\">\r\n        <View style={styles.modalContainer}>\r\n          <Text style={styles.modalTitle}>YTD Modal</Text>\r\n          {/* Add your YTD modal content here */}\r\n          <TouchableOpacity style={styles.modalCloseButton} onPress={toggleYtdModal}>\r\n            <Text style={styles.modalCloseButtonText}>Close</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n    container4: {\r\n      \r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        padding: 16,\r\n        backgroundColor: '#F5F5F5',\r\n      },\r\n      title: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n      },\r\n      buttonsContainer: {\r\n        flexDirection: 'row',\r\n      },\r\n      button: {\r\n        marginLeft: 8,\r\n        paddingVertical: 4,\r\n        paddingHorizontal: 8,\r\n        backgroundColor: '#ECECEC',\r\n        borderRadius: 4,\r\n      },\r\n      buttonText: {\r\n        fontSize: 14,\r\n        color: 'black',\r\n      },\r\n      \r\n      modalCloseButton: {\r\n        marginTop: 16,\r\n        padding: 8,\r\n        backgroundColor: '#ECECEC',\r\n        borderRadius: 4,\r\n      },\r\n      modalCloseButtonText: {\r\n        fontSize: 14,\r\n        color: 'black',\r\n      },\r\n}\r\n\r\nexport default MyWatchList;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,MAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGxC,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;EAExB,IAAAC,SAAA,GAAkDb,QAAQ,CAAC,KAAK,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA1DG,iBAAiB,GAAAF,UAAA;IAAEG,oBAAoB,GAAAH,UAAA;EAC9C,IAAAI,UAAA,GAAkDlB,QAAQ,CAAC,KAAK,CAAC;IAAAmB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA1DE,iBAAiB,GAAAD,UAAA;IAAEE,oBAAoB,GAAAF,UAAA;EAE9C,IAAMG,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;IAC3BL,oBAAoB,CAAC,CAACD,iBAAiB,CAAC;EAC1C,CAAC;EAED,IAAMO,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;IAC3BF,oBAAoB,CAAC,CAACD,iBAAiB,CAAC;EAC1C,CAAC;EAEC,OACAT,KAAA,CAACV,IAAI;IAACuB,KAAK,EAAEC,MAAM,CAACC,UAAW;IAAAC,QAAA,GAC7BlB,IAAA,CAACP,IAAI;MAACsB,KAAK,EAAEC,MAAM,CAACG,KAAM;MAAAD,QAAA,EAAC;IAAY,CAAM,CAAC,EAC9ChB,KAAA,CAACV,IAAI;MAACuB,KAAK,EAAEC,MAAM,CAACI,gBAAiB;MAAAF,QAAA,GACnClB,IAAA,CAACL,gBAAgB;QAACoB,KAAK,EAAEC,MAAM,CAACK,MAAO;QAACC,OAAO,EAAET,cAAe;QAAAK,QAAA,EAC9DlB,IAAA,CAACP,IAAI;UAACsB,KAAK,EAAEC,MAAM,CAACO,UAAW;UAAAL,QAAA,EAAC;QAAG,CAAM;MAAC,CAC1B,CAAC,EACnBlB,IAAA,CAACL,gBAAgB;QAACoB,KAAK,EAAEC,MAAM,CAACK,MAAO;QAACC,OAAO,EAAER,cAAe;QAAAI,QAAA,EAC9DlB,IAAA,CAACP,IAAI;UAACsB,KAAK,EAAEC,MAAM,CAACO,UAAW;UAAAL,QAAA,EAAC;QAAG,CAAM;MAAC,CAC1B,CAAC;IAAA,CACf,CAAC,EAGPlB,IAAA,CAACH,KAAK;MAAC2B,OAAO,EAAEjB,iBAAkB;MAACkB,aAAa,EAAC,OAAO;MAAAP,QAAA,EACtDhB,KAAA,CAACV,IAAI;QAACuB,KAAK,EAAEC,MAAM,CAACU,cAAe;QAAAR,QAAA,GACjClB,IAAA,CAACP,IAAI;UAACsB,KAAK,EAAEC,MAAM,CAACW,UAAW;UAAAT,QAAA,EAAC;QAAS,CAAM,CAAC,EAEhDlB,IAAA,CAACL,gBAAgB;UAACoB,KAAK,EAAEC,MAAM,CAACY,gBAAiB;UAACN,OAAO,EAAET,cAAe;UAAAK,QAAA,EACxElB,IAAA,CAACP,IAAI;YAACsB,KAAK,EAAEC,MAAM,CAACa,oBAAqB;YAAAX,QAAA,EAAC;UAAK,CAAM;QAAC,CACtC,CAAC;MAAA,CACf;IAAC,CACF,CAAC,EAGRlB,IAAA,CAACH,KAAK;MAAC2B,OAAO,EAAEb,iBAAkB;MAACc,aAAa,EAAC,OAAO;MAAAP,QAAA,EACtDhB,KAAA,CAACV,IAAI;QAACuB,KAAK,EAAEC,MAAM,CAACU,cAAe;QAAAR,QAAA,GACjClB,IAAA,CAACP,IAAI;UAACsB,KAAK,EAAEC,MAAM,CAACW,UAAW;UAAAT,QAAA,EAAC;QAAS,CAAM,CAAC,EAEhDlB,IAAA,CAACL,gBAAgB;UAACoB,KAAK,EAAEC,MAAM,CAACY,gBAAiB;UAACN,OAAO,EAAER,cAAe;UAAAI,QAAA,EACxElB,IAAA,CAACP,IAAI;YAACsB,KAAK,EAAEC,MAAM,CAACa,oBAAqB;YAAAX,QAAA,EAAC;UAAK,CAAM;QAAC,CACtC,CAAC;MAAA,CACf;IAAC,CACF,CAAC;EAAA,CACJ,CAAC;AAEX,CAAC;AAED,IAAMF,MAAM,GAAG;EACXC,UAAU,EAAE;IAERa,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,eAAe;IAC/BC,UAAU,EAAE,QAAQ;IACpBC,OAAO,EAAE,EAAE;IACXC,eAAe,EAAE;EACnB,CAAC;EACDf,KAAK,EAAE;IACLgB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACDhB,gBAAgB,EAAE;IAChBU,aAAa,EAAE;EACjB,CAAC;EACDT,MAAM,EAAE;IACNgB,UAAU,EAAE,CAAC;IACbC,eAAe,EAAE,CAAC;IAClBC,iBAAiB,EAAE,CAAC;IACpBL,eAAe,EAAE,SAAS;IAC1BM,YAAY,EAAE;EAChB,CAAC;EACDjB,UAAU,EAAE;IACVY,QAAQ,EAAE,EAAE;IACZM,KAAK,EAAE;EACT,CAAC;EAEDb,gBAAgB,EAAE;IAChBc,SAAS,EAAE,EAAE;IACbT,OAAO,EAAE,CAAC;IACVC,eAAe,EAAE,SAAS;IAC1BM,YAAY,EAAE;EAChB,CAAC;EACDX,oBAAoB,EAAE;IACpBM,QAAQ,EAAE,EAAE;IACZM,KAAK,EAAE;EACT;AACN,CAAC;AAED,eAAetC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}