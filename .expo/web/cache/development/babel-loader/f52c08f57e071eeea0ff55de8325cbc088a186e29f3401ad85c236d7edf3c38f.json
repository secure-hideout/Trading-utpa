{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Ionicons } from '@expo/vector-icons';\nimport Withdraw from \"./WithDraw\";\nimport { styles } from \"./Styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Deposit = function Deposit() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isModalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    modalText = _useState4[0],\n    setModalText = _useState4[1];\n  var handleDepositClick = function handleDepositClick() {\n    console.log('Deposit clicked');\n    setModalText('Deposit clicked');\n    setModalVisible(true);\n  };\n  var closeModal = function closeModal() {\n    setModalVisible(false);\n  };\n  return _jsxs(View, {\n    children: [_jsxs(View, {\n      style: styles.container3,\n      children: [_jsxs(TouchableOpacity, {\n        onPress: handleDepositClick,\n        style: styles.ellipse,\n        children: [_jsx(View, {\n          style: styles.circle,\n          children: _jsx(Ionicons, {\n            name: \"arrow-up-outline\",\n            size: 30,\n            color: \"black\"\n          })\n        }), _jsx(Text, {\n          style: [styles.text, styles.withdrawText2],\n          children: \"Deposit\"\n        })]\n      }), _jsx(View, {\n        style: styles.spacing\n      }), _jsx(Withdraw, {})]\n    }), _jsx(Modal, {\n      visible: isModalVisible,\n      animationType: \"slide\",\n      children: _jsxs(View, {\n        style: styles.modalContainer,\n        children: [_jsx(Text, {\n          children: modalText\n        }), _jsx(Button, {\n          title: \"Close\",\n          onPress: closeModal\n        })]\n      })\n    })]\n  });\n};\nexport default Deposit;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","Modal","Button","Ionicons","Withdraw","styles","jsx","_jsx","jsxs","_jsxs","Deposit","_useState","_useState2","_slicedToArray","isModalVisible","setModalVisible","_useState3","_useState4","modalText","setModalText","handleDepositClick","console","log","closeModal","children","style","container3","onPress","ellipse","circle","name","size","color","text","withdrawText2","spacing","visible","animationType","modalContainer","title"],"sources":["C:/Users/ADMIN/Downloads/Trading-app/Trading-app/screens/Deposite.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TouchableOpacity, Modal, Button } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nimport Withdraw from './WithDraw';\r\n\r\nimport { styles } from './Styles';\r\n\r\n\r\nconst Deposit = () => {\r\n  const [isModalVisible, setModalVisible] = useState(false);\r\n  const [modalText, setModalText] = useState('');\r\n\r\n  const handleDepositClick = () => {\r\n    console.log('Deposit clicked');\r\n    setModalText('Deposit clicked');\r\n    setModalVisible(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalVisible(false);\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <View style={styles.container3}>\r\n        <TouchableOpacity onPress={handleDepositClick} style={styles.ellipse}>\r\n          <View style={styles.circle}>\r\n            <Ionicons name=\"arrow-up-outline\" size={30} color=\"black\" />\r\n          </View>\r\n          <Text style={[styles.text, styles.withdrawText2]}>Deposit</Text>\r\n        </TouchableOpacity>\r\n        <View style={styles.spacing} />\r\n        <Withdraw />\r\n      </View>\r\n      <Modal visible={isModalVisible} animationType=\"slide\">\r\n        <View style={styles.modalContainer}>\r\n          <Text>{modalText}</Text>\r\n          <Button title=\"Close\" onPress={closeModal} />\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Deposit;\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { View, Text, Image, TouchableOpacity, TextInput, Modal, Button } from 'react-native';\r\n\r\n// import { Ionicons } from '@expo/vector-icons';\r\n\r\n\r\n// const Deposit = () => {\r\n//     const [isModalVisible, setModalVisible] = useState(false);\r\n//     const [modalText, setModalText] = useState('');\r\n\r\n//     const handleDepositClick = () => {\r\n//         console.log('Deposit clicked');\r\n//         setModalText('Deposit clicked');\r\n//         setModalVisible(true);\r\n//       };\r\n    \r\n//       const handleWithdrawClick = () => {\r\n//         console.log('Withdraw clicked');\r\n//         setModalText('Withdraw clicked');\r\n//         setModalVisible(true);\r\n//       };\r\n    \r\n//       const closeModal = () => {\r\n//         setModalVisible(false);\r\n//       };\r\n    \r\n//     return (\r\n// <View>\r\n// <View style={styles.container3}>\r\n// <TouchableOpacity onPress={handleDepositClick} style={styles.ellipse}>\r\n// <View style={styles.circle}>\r\n// <Ionicons name=\"arrow-up-outline\" size={30} color=\"black\" />\r\n// </View>\r\n// <Text style={[styles.text, styles.withdrawText2]}>Deposit</Text>\r\n// </TouchableOpacity>\r\n// <View style={styles.spacing} />\r\n// <TouchableOpacity onPress={handleWithdrawClick} style={styles.ellipse}>\r\n// <View style={styles.circle}>\r\n// <Ionicons name=\"arrow-down-outline\" size={30} color=\"black\" />\r\n// </View>\r\n// <Text style={[styles.text, styles.withdrawText]}>Withdraw</Text>\r\n// </TouchableOpacity>\r\n// <Modal visible={isModalVisible} animationType=\"slide\">\r\n// <View style={styles.modalContainer}>\r\n// <Text>{modalText}</Text>\r\n// <Button title=\"Close\" onPress={closeModal} />\r\n// </View>\r\n// </Modal>\r\n// </View>\r\n// </View>\r\n//     );\r\n// };\r\n\r\n// const styles = {\r\n//     container3: {\r\n//         paddingVertical:10,\r\n//         flexDirection: 'row',\r\n//         justifyContent: 'center',\r\n//         alignItems: 'center',\r\n//         marginLeft:0,\r\n//       },\r\n//       ellipse: {\r\n//         width: 166,\r\n//         height: 48,\r\n//         //left:16,\r\n//         borderRadius: 100,\r\n//         backgroundColor: '#ECECEC',\r\n//         justifyContent: 'center',\r\n//         alignItems: 'center',\r\n//         //paddingLeft: 16,\r\n    \r\n//         // width:166,\r\n//         // height:48,\r\n       \r\n//         // left:16,\r\n//         // borderRadius:100,\r\n//         // backgroundColor: '#ECECEC',\r\n    \r\n    \r\n//       },\r\n//       circle: {\r\n//         width: 40,\r\n//         height: 40,\r\n//         borderRadius: 100,\r\n//         backgroundColor: '#B1A4FF',\r\n//         position: 'absolute',\r\n//         left: 0,\r\n//         marginLeft:5,\r\n//         justifyContent: 'center',\r\n//         alignItems: 'center',\r\n//       },\r\n//       spacing: {\r\n//         width: 50,\r\n//       },\r\n//       text: {\r\n//         marginLeft: 16,\r\n//         fontSize: 20,\r\n//         color: 'black',\r\n//         textAlign:'center',\r\n//         color:'#1C1E32',\r\n        \r\n        \r\n//       },\r\n//       withdrawText: {\r\n//         marginRight: -10, // Adjust this value as needed\r\n//         lineHeight:19.09,\r\n//         fontWeight:54,\r\n//       },\r\n//       withdrawText2: {\r\n//         marginRight: -10,\r\n//         lineHeight:19.09,\r\n//         fontWeight:54,\r\n        \r\n       \r\n//       },\r\n      \r\n//       container5: {\r\n//         flex: 1,\r\n//         flexDirection: 'row',\r\n//         justifyContent: 'space-between',\r\n//         padding:0,\r\n//       },\r\n//       gridContainer: {\r\n//         flex: 1,\r\n//         flexDirection: 'row',\r\n//         alignItems: 'center',\r\n//         height:100,\r\n        \r\n//         margin: 5,\r\n//         borderRadius: 10,\r\n//         backgroundColor: 'lightgray',\r\n//       },\r\n//       firstLine: {\r\n//         flexDirection: 'row',\r\n//         alignItems: 'center',\r\n//         marginBottom: 10,\r\n        \r\n//       },\r\n//       secondLine: {\r\n//         flexDirection: 'row',\r\n//         alignItems: 'center',\r\n//         marginTop:20,\r\n        \r\n//       },\r\n//       logo2: {\r\n//         width: 20,\r\n//         height: 20,\r\n//         marginBottom:8,\r\n//       },\r\n//       textContainer: {\r\n//         marginLeft: 5,\r\n//       },\r\n//       gridText: {\r\n//         fontSize: 16,\r\n//         fontWeight: 'bold',\r\n       \r\n//       },\r\n//       gridSubText: {\r\n//         fontSize: 12,\r\n//         color: 'gray',\r\n//         fontWeight: 'bold',\r\n//         marginLeft: 3,\r\n//       },\r\n//       value2: {\r\n//         fontSize: 10,\r\n//         fontWeight: 'bold',\r\n        \r\n//       },\r\n//       button2: {\r\n//         backgroundColor: 'blue',\r\n//         borderRadius:5 ,\r\n//         padding: 1,\r\n//         marginLeft: 5,\r\n//       },\r\n//       buttonValue: {\r\n//         color: 'white',\r\n//         fontSize: 10,\r\n//         fontWeight: 'bold',\r\n//       },\r\n// }\r\n\r\n// export default Deposit;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,MAAA;AAExC,SAASC,QAAQ,QAAQ,oBAAoB;AAE7C,OAAOC,QAAQ;AAEf,SAASC,MAAM;AAAmB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGlC,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;EACpB,IAAAC,SAAA,GAA0Cd,QAAQ,CAAC,KAAK,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAlDG,cAAc,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EACtC,IAAAI,UAAA,GAAkCnB,QAAQ,CAAC,EAAE,CAAC;IAAAoB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAvCE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAE9B,IAAMG,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAA,EAAS;IAC/BC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9BH,YAAY,CAAC,iBAAiB,CAAC;IAC/BJ,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,IAAMQ,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;IACvBR,eAAe,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,OACEN,KAAA,CAACX,IAAI;IAAA0B,QAAA,GACHf,KAAA,CAACX,IAAI;MAAC2B,KAAK,EAAEpB,MAAM,CAACqB,UAAW;MAAAF,QAAA,GAC7Bf,KAAA,CAACT,gBAAgB;QAAC2B,OAAO,EAAEP,kBAAmB;QAACK,KAAK,EAAEpB,MAAM,CAACuB,OAAQ;QAAAJ,QAAA,GACnEjB,IAAA,CAACT,IAAI;UAAC2B,KAAK,EAAEpB,MAAM,CAACwB,MAAO;UAAAL,QAAA,EACzBjB,IAAA,CAACJ,QAAQ;YAAC2B,IAAI,EAAC,kBAAkB;YAACC,IAAI,EAAE,EAAG;YAACC,KAAK,EAAC;UAAO,CAAE;QAAC,CACxD,CAAC,EACPzB,IAAA,CAACR,IAAI;UAAC0B,KAAK,EAAE,CAACpB,MAAM,CAAC4B,IAAI,EAAE5B,MAAM,CAAC6B,aAAa,CAAE;UAAAV,QAAA,EAAC;QAAO,CAAM,CAAC;MAAA,CAChD,CAAC,EACnBjB,IAAA,CAACT,IAAI;QAAC2B,KAAK,EAAEpB,MAAM,CAAC8B;MAAQ,CAAE,CAAC,EAC/B5B,IAAA,CAACH,QAAQ,IAAE,CAAC;IAAA,CACR,CAAC,EACPG,IAAA,CAACN,KAAK;MAACmC,OAAO,EAAEtB,cAAe;MAACuB,aAAa,EAAC,OAAO;MAAAb,QAAA,EACnDf,KAAA,CAACX,IAAI;QAAC2B,KAAK,EAAEpB,MAAM,CAACiC,cAAe;QAAAd,QAAA,GACjCjB,IAAA,CAACR,IAAI;UAAAyB,QAAA,EAAEN;QAAS,CAAO,CAAC,EACxBX,IAAA,CAACL,MAAM;UAACqC,KAAK,EAAC,OAAO;UAACZ,OAAO,EAAEJ;QAAW,CAAE,CAAC;MAAA,CACzC;IAAC,CACF,CAAC;EAAA,CACJ,CAAC;AAEX,CAAC;AAED,eAAeb,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}