{"ast":null,"code":"import React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CardItems = function CardItems(_ref) {\n  var log = _ref.log,\n    name = _ref.name,\n    symbl = _ref.symbl,\n    value = _ref.value,\n    changePercentage = _ref.changePercentage;\n  return _jsx(View, {\n    style: styles.container5,\n    children: _jsxs(View, {\n      style: styles.gridContainer,\n      children: [_jsx(View, {\n        style: styles.firstLine,\n        children: _jsx(View, {\n          style: styles.textContainer,\n          children: _jsx(Text, {\n            style: styles.gridText,\n            children: name\n          })\n        })\n      }), _jsxs(View, {\n        style: styles.secondLine,\n        children: [_jsx(Text, {\n          style: styles.value2,\n          children: value\n        }), _jsx(TouchableOpacity, {\n          style: styles.button2,\n          children: _jsx(Text, {\n            style: styles.buttonValue,\n            children: changePercentage\n          })\n        })]\n      })]\n    })\n  });\n};\nvar styles = {\n  container5: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 0\n  },\n  gridContainer: {\n    flex: 1,\n    alignItems: 'center',\n    height: 100,\n    margin: 5,\n    borderRadius: 10,\n    backgroundColor: 'lightgray'\n  },\n  firstLine: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  secondLine: {\n    flexDirection: 'coloumn',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  logo2: {\n    width: 20,\n    height: 20,\n    marginBottom: 8\n  },\n  textContainer: {\n    marginLeft: 5\n  },\n  gridText: {\n    fontSize: 17,\n    fontWeight: 'bold'\n  },\n  gridSubText: {\n    fontSize: 12,\n    color: 'gray',\n    fontWeight: 'bold',\n    marginLeft: 3\n  },\n  value2: {\n    fontSize: 15,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  button2: {\n    backgroundColor: '#333',\n    borderRadius: 5,\n    padding: 5,\n    marginTop: 10\n  },\n  buttonValue: {\n    color: 'cornflowerblue',\n    fontSize: 12,\n    fontWeight: 'bold'\n  }\n};\nexport default CardItems;","map":{"version":3,"names":["React","useState","View","Text","Image","TouchableOpacity","TextInput","Modal","Button","Ionicons","jsx","_jsx","jsxs","_jsxs","CardItems","_ref","log","name","symbl","value","changePercentage","style","styles","container5","children","gridContainer","firstLine","textContainer","gridText","secondLine","value2","button2","buttonValue","flex","flexDirection","justifyContent","padding","alignItems","height","margin","borderRadius","backgroundColor","marginBottom","logo2","width","marginLeft","fontSize","fontWeight","gridSubText","color","textAlign","marginTop"],"sources":["C:/Users/ADMIN/Downloads/Trading-app/Trading-app/screens/CardItems.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, Image, TouchableOpacity, TextInput, Modal, Button } from 'react-native';\r\n\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\n\r\n\r\nconst CardItems = ({log,name,symbl,value,changePercentage}) => {\r\n \r\n  return (\r\n\r\n\r\n<View style={styles.container5}>\r\n      <View style={styles.gridContainer}>\r\n        {/* First Line */}\r\n        <View style={styles.firstLine}>\r\n          {/* <Image style={styles.logo2} source={require('../assets/ethereumsvgrepocom-1.svg')} /> */}\r\n          <View style={styles.textContainer}>\r\n            <Text style={styles.gridText}>{name}</Text>\r\n            {/* <Text style={styles.gridSubText}>{symbl}</Text> */}\r\n          </View>\r\n        </View>\r\n        {/* Second Line */}\r\n        <View style={styles.secondLine}>\r\n          <Text style={styles.value2}>{value}</Text>\r\n          <TouchableOpacity style={styles.button2}>\r\n            <Text style={styles.buttonValue}>{changePercentage}</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n</View>\r\n\r\n\r\n \r\n)};\r\n\r\nconst styles = {\r\n\r\ncontainer5: {\r\n  flex: 1,\r\n  flexDirection: 'row',\r\n  justifyContent: 'space-between',\r\n  padding:0,\r\n},\r\ngridContainer: {\r\n  flex: 1,\r\n  alignItems: 'center',\r\n  height:100,\r\n  \r\n  margin: 5,\r\n  borderRadius: 10,\r\n  backgroundColor: 'lightgray',\r\n},\r\nfirstLine: {\r\n  flexDirection: 'row',\r\n  alignItems: 'center',\r\n  marginBottom: 10,\r\n  \r\n},\r\nsecondLine: {\r\n  flexDirection: 'coloumn',\r\n  alignItems: 'center',\r\n  //marginTop:20,\r\n   justifyContent: 'center', // Align the content horizontally in the center\r\n  \r\n},\r\nlogo2: {\r\n  width: 20,\r\n  height: 20,\r\n  marginBottom:8,\r\n},\r\ntextContainer: {\r\n  marginLeft: 5,\r\n},\r\ngridText: {\r\n  fontSize: 17,\r\n  fontWeight: 'bold',\r\n \r\n},\r\n\r\n// pointValue\r\ngridSubText: {\r\n  fontSize: 12,\r\n  color: 'gray',\r\n  fontWeight: 'bold',\r\n  marginLeft: 3,\r\n},\r\nvalue2: {\r\n  fontSize: 15,\r\n  fontWeight: 'bold',\r\n  textAlign: 'center', // Center the text horizontally\r\n  \r\n},\r\nbutton2: {\r\n  backgroundColor: '#333',\r\n  borderRadius:5 ,\r\n  padding: 5,\r\n  marginTop: 10,\r\n},\r\nbuttonValue: {\r\n  color: 'cornflowerblue',\r\n  fontSize: 12,\r\n  fontWeight: 'bold',\r\n},\r\n};\r\n\r\n\r\nexport default CardItems;\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}